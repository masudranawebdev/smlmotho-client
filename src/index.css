@import url("https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800&family=Nunito:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700&family=Pacifico&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  scroll-behavior: smooth;
  font-family: "Manrope", sans-serif;
}
@layer base {
  html {
    @apply scroll-smooth;
  }
}
/* width */
::-webkit-scrollbar {
  width: 10px;
}

/* Track */
::-webkit-scrollbar-track {
  background: #f1f1f1;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: #a5a4a4e5;
  border-radius: 5px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #858585dc;
}

@layer components {
  .container {
    @apply max-w-full 2xl:max-w-[1560px] mx-auto px-3 lg:px-4 xl:px-24;
  }
  .btn {
    @apply bg-primaryColor hover:bg-black text-white font-[600] px-5 py-2 rounded transition-colors duration-300;
  }
  .text-para {
    @apply text-[16px] sm:text-base lg:text-lg leading-[25px] sm:leading-[sm] md:leading-[30px] font-[400] sm:font-[400] md:font-[400] lg:font-[400] mt-[16px];
  }
  .form-label {
    @apply text-textColor font-semibold text-[16px] leading-7 mb-2;
  }
  .form-input {
    @apply w-full px-3 py-2 border hover:border-primaryColor border-[#FEB60D] focus:outline-none focus:border-yellowColor text-[16px] leading-7 text-headingColor placeholder:text-textColor rounded-md;
  }
  .heading {
    @apply text-3xl lg:leading-[45px] sm:leading-[40px] leading-[35px]   md:text-4xl font-[600] lg:font-[700] mt-[16px];
  }
}

/* styles.css */

/* Custom styles for the react-slider component */
.react-slider {
  height: 10px;
}

/* Styles for the track of the slider */
.track {
  background-color: #CBD5E0; /* Light gray */
  height: 10px;
}

/* Styles for the thumb of the slider */
.thumb {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #4C51BF; /* Primary color */
  border: 2px solid #2D3748; /* Dark gray border */
  cursor: grab;
}

/* Styles for the active state of the thumb */
.thumb:active {
  cursor: grabbing;
}
